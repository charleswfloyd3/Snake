[{"C:\\Users\\16502\\Desktop\\snake\\src\\index.js":"1","C:\\Users\\16502\\Desktop\\snake\\src\\gameover\\gameover.js":"2","C:\\Users\\16502\\Desktop\\snake\\src\\App.js":"3","C:\\Users\\16502\\Desktop\\snake\\src\\snake_food\\snake_food.js":"4","C:\\Users\\16502\\Desktop\\snake\\src\\controls\\controls.js":"5","C:\\Users\\16502\\Desktop\\snake\\src\\scoreboard\\scoreboard.js":"6"},{"size":500,"mtime":1607756146799,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1612422384188,"results":"9","hashOfConfig":"8"},{"size":4814,"mtime":1612421852045,"results":"10","hashOfConfig":"8"},{"size":323,"mtime":1612143862433,"results":"11","hashOfConfig":"8"},{"size":604,"mtime":1612413595747,"results":"12","hashOfConfig":"8"},{"size":426,"mtime":1612416101570,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rcchh9",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\16502\\Desktop\\snake\\src\\index.js",[],"C:\\Users\\16502\\Desktop\\snake\\src\\gameover\\gameover.js",["27"],"C:\\Users\\16502\\Desktop\\snake\\src\\App.js",["28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45"],"import './App.css';\nimport React, {useState, useRef, useEffect} from 'react'\nimport useInterval from './useIntervalHook'\nimport Snake from './snake/snake';\nimport './App.css'\nimport SnakeFood from './snake_food/snake_food';\nimport GameOver from './gameover/gameover';\nimport Controls from './controls/controls'\nimport Scoreboard from './scoreboard/scoreboard';\nfunction App(props) {\n    \n  const [foodalive, setfoodlifestatus] = useState(true)\n  const [foodplacement, setfoodplacement] = useState(true)\n  const [snakeCoordinates, setsnakeCoordinates] = useState([[50,0], [50,5], [50,10]]);\n  const [foodCoordinate, setFoodCoordinate] = useState(\"\");\n  const [direction, setDirection] = useState(\"down\")\n\tconst [counter, setcounter] = useState(0)\n\tconst [gameStatus, setgameStatus] = useState(true)\n  const [score, setScore] = useState(0)\n  function isArrayInArray(arr, item){\n    var item_as_string = JSON.stringify(item);\n\n    var contains = arr.some(function(ele){\n        return JSON.stringify(ele) === item_as_string;\n    });\n    return contains;\n  }\n\tuseInterval(\n\t\t()=>{\n\t\tsetcounter(counter+1)\n}\n    ,125)\n    useInterval(() =>{\n      \t\tfor(let i = 0; i < snakeCoordinates.length - 1; i++){\n\t\tif(snakeCoordinates[i][0] >= 90.1 || snakeCoordinates[i][0] < -.1 || snakeCoordinates[i][1] >= 90.1 || snakeCoordinates[i][1] < -.1){\n\t\t\tsetgameStatus(false)\n\t\t}\n\t}\n    }, 1)\n\tconst eatFood = () =>{\n\t\tif(isArrayInArray(snakeCoordinates, foodCoordinate)){\n\t\t\tif(foodalive){\n\t\t\t\tif(direction == \"down\"){\n\t\t\t\t\tsnakeCoordinates.unshift([snakeCoordinates[0][0], snakeCoordinates[0][1] - 5])\n\t\t\t\t}\n\t\t\t\telse if(direction == \"up\"){\n\t\t\t\t\tsnakeCoordinates.unshift([snakeCoordinates[0][0], snakeCoordinates[0][1] + 5])\n\t\t\t\t}\n\t\t\t\telse if(direction == \"left\"){\n\t\t\t\t\tsnakeCoordinates.unshift([snakeCoordinates[0][0] +5, snakeCoordinates[0][1]])\n\t\t\t\t}\n\t\t\t\telse if(direction == \"right\"){\n\t\t\t\t\tsnakeCoordinates.unshift([snakeCoordinates[0][0] -5, snakeCoordinates[0][1]])\n\n\t\t\t\t}\t\t\t\n        setfoodlifestatus(false)\n        setScore(score+5)\n\t\t\t}\n\t\t\telse{\n\t\t\tsetfoodlifestatus(true)\n\n\t\t\t}\n\t\t}\n\t}\t\t\n\tuseEffect(()=>{\n\t\t\t\tmoveSnake()\n\t\t\t\teatFood()\n\n\t},[counter])\n  useEffect(\n        () => {\n        let randomCoordinateOptions = [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90]\n\n        let x = randomCoordinateOptions[Math.floor(Math.random() * randomCoordinateOptions.length)];\n        let y = randomCoordinateOptions[Math.floor(Math.random() * randomCoordinateOptions.length)];\n\n        if(isArrayInArray(snakeCoordinates, [x,y])){\n        if(foodplacement){\n        setfoodplacement(false)\n        }\n        else{\n        setfoodplacement(true)\n\n        }\n        }\n        else{\n        setFoodCoordinate([x,y])\n        }\n\n    \n  }, [foodalive])\n\n  const checkKey = (e) => {\n    e = e || window.event;\n    if (e.keyCode == '38') {\n        console.log(\"up\")\n        setDirection(\"up\")\n    }\n    else if (e.keyCode == '40') {\n        console.log(\"down\")\n        setDirection(\"down\")\n    }\n    else if (e.keyCode == '37') {\n        console.log(\"left\")\n        setDirection(\"left\")\n    }\n    else if (e.keyCode == '39') {\n        console.log(\"right\")\n        setDirection(\"right\")\n    }\n    else if(e.keyCode == \"82\"){\n      setDirection(\"down\")\n      setsnakeCoordinates([[50,0], [50,5], [50,10]])\n      // setfoodlifestatus(false)\n      setgameStatus(true)\n    }\n  }\n\n  document.onkeydown = checkKey;\n  let snakeCoordinatesLive = snakeCoordinates\n  let head = snakeCoordinatesLive[snakeCoordinatesLive.length-1]    \n   \n  const moveSnake = () =>{\n\n\t\t\t \n      if (direction == \"up\") {\n          head = [head[0], head[1] - 5]\n          snakeCoordinatesLive.push(head)\n          snakeCoordinatesLive.shift()\n          setsnakeCoordinates(snakeCoordinatesLive)\n      }\n      else if (direction == \"down\") {   \n          head = [head[0], head[1] + 5]\n          snakeCoordinatesLive.push(head)\n          snakeCoordinatesLive.shift()\n          setsnakeCoordinates(snakeCoordinatesLive)          \n      }\n      else if (direction == \"left\") {\n          head = [head[0] - 5, head[1]]\n          snakeCoordinatesLive.push(head)\n          snakeCoordinatesLive.shift()\n          setsnakeCoordinates(snakeCoordinatesLive)\n      }\n      else if (direction == \"right\") {\n          head = [head[0] + 5, head[1]]\n          snakeCoordinatesLive.push(head)\n          snakeCoordinatesLive.shift()\n          setsnakeCoordinates(snakeCoordinatesLive)\n      }        \n  }\n\n  return (\n\n    <div className=\"snake_container\">\n      \n\t\t{gameStatus ?<div className=\"game_grid\"><Snake coord={snakeCoordinates}/>\n      <SnakeFood coord={foodCoordinate}/>\n      </div> : <GameOver />}\n      <div className=\"extrainfo\">\n      {/* <p className=\"scoreTitleCurrent\">Score: &nbsp;{score} </p> */}\n\t\n      \n      </div>\n    </div>\n  );\n  }\n\nexport default App;\n","C:\\Users\\16502\\Desktop\\snake\\src\\snake_food\\snake_food.js",["46"],"C:\\Users\\16502\\Desktop\\snake\\src\\controls\\controls.js",["47"],"C:\\Users\\16502\\Desktop\\snake\\src\\scoreboard\\scoreboard.js",[],{"ruleId":"48","severity":1,"message":"49","line":1,"column":16,"nodeType":"50","messageId":"51","endLine":1,"endColumn":24},{"ruleId":"48","severity":1,"message":"52","line":2,"column":26,"nodeType":"50","messageId":"51","endLine":2,"endColumn":32},{"ruleId":"48","severity":1,"message":"53","line":8,"column":8,"nodeType":"50","messageId":"51","endLine":8,"endColumn":16},{"ruleId":"48","severity":1,"message":"54","line":9,"column":8,"nodeType":"50","messageId":"51","endLine":9,"endColumn":18},{"ruleId":"55","severity":1,"message":"56","line":43,"column":18,"nodeType":"57","messageId":"58","endLine":43,"endColumn":20},{"ruleId":"55","severity":1,"message":"56","line":46,"column":23,"nodeType":"57","messageId":"58","endLine":46,"endColumn":25},{"ruleId":"55","severity":1,"message":"56","line":49,"column":23,"nodeType":"57","messageId":"58","endLine":49,"endColumn":25},{"ruleId":"55","severity":1,"message":"56","line":52,"column":23,"nodeType":"57","messageId":"58","endLine":52,"endColumn":25},{"ruleId":"59","severity":1,"message":"60","line":69,"column":4,"nodeType":"61","endLine":69,"endColumn":13,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"63","line":91,"column":6,"nodeType":"61","endLine":91,"endColumn":17,"suggestions":"64"},{"ruleId":"55","severity":1,"message":"56","line":95,"column":19,"nodeType":"57","messageId":"58","endLine":95,"endColumn":21},{"ruleId":"55","severity":1,"message":"56","line":99,"column":24,"nodeType":"57","messageId":"58","endLine":99,"endColumn":26},{"ruleId":"55","severity":1,"message":"56","line":103,"column":24,"nodeType":"57","messageId":"58","endLine":103,"endColumn":26},{"ruleId":"55","severity":1,"message":"56","line":107,"column":24,"nodeType":"57","messageId":"58","endLine":107,"endColumn":26},{"ruleId":"55","severity":1,"message":"56","line":111,"column":23,"nodeType":"57","messageId":"58","endLine":111,"endColumn":25},{"ruleId":"55","severity":1,"message":"56","line":126,"column":21,"nodeType":"57","messageId":"58","endLine":126,"endColumn":23},{"ruleId":"55","severity":1,"message":"56","line":132,"column":26,"nodeType":"57","messageId":"58","endLine":132,"endColumn":28},{"ruleId":"55","severity":1,"message":"56","line":138,"column":26,"nodeType":"57","messageId":"58","endLine":138,"endColumn":28},{"ruleId":"55","severity":1,"message":"56","line":144,"column":26,"nodeType":"57","messageId":"58","endLine":144,"endColumn":28},{"ruleId":"48","severity":1,"message":"49","line":1,"column":16,"nodeType":"50","messageId":"51","endLine":1,"endColumn":24},{"ruleId":"65","severity":1,"message":"66","line":11,"column":13,"nodeType":"67","endLine":11,"endColumn":72},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'Controls' is defined but never used.","'Scoreboard' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'eatFood' and 'moveSnake'. Either include them or remove the dependency array.","ArrayExpression",["68"],"React Hook useEffect has missing dependencies: 'foodplacement' and 'snakeCoordinates'. Either include them or remove the dependency array.",["69"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"Update the dependencies array to be: [counter, eatFood, moveSnake]",{"range":"74","text":"75"},"Update the dependencies array to be: [foodalive, foodplacement, snakeCoordinates]",{"range":"76","text":"77"},[2131,2140],"[counter, eatFood, moveSnake]",[2726,2737],"[foodalive, foodplacement, snakeCoordinates]"]